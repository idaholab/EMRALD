{
  "id": 0,
  "name": "ActionsReferencing",
  "desc": "",
  "version": 1.2,
  "DiagramList": [
    {
      "Diagram": {
        "id": 1,
        "name": "Main",
        "desc": "",
        "diagramType": "dtPlant",
        "diagramTemplate": "",
        "diagramLabel": "Plant",
        "states": [
          "State1",
          "State2"
        ]
      }
    }
  ],
  "ExtSimList": [
    {
      "ExtSim": {
        "id": 1,
        "name": "ExtSim1",
        "resourceName": "Google Chrome",
        "modelRef": "",
        "states": [],
        "configData": "",
        "simMaxTime": ""
      }
    }
  ],
  "StateList": [
    {
      "State": {
        "id": 1,
        "name": "State1",
        "desc": "",
        "stateType": "stStandard",
        "diagramName": "Main",
        "immediateActions": [
          "TestTransition",
          "TestCngVar",
          "TestExtSim",
          "TestRunApp1",
          "TestOpenErrorPro"
        ],
        "events": [],
        "eventActions": [],
        "geometry": "{ x: 288.4548645019531, y: 266.1632080078125, width: 200, height: 170}"
      }
    },
    {
      "State": {
        "id": 2,
        "name": "State2",
        "desc": "",
        "stateType": "stStandard",
        "diagramName": "Main",
        "immediateActions": [],
        "events": [],
        "eventActions": [],
        "geometry": "{ x: 700.6771240234375, y: 395.0520935058594, width: 200, height: 80}"
      }
    }
  ],
  "ActionList": [
    {
      "Action": {
        "id": 1,
        "name": "TestTransition",
        "desc": "",
        "actType": "atTransition",
        "mainItem": false,
        "mutExcl": true,
        "newStates": [
          {
            "toState": "State2",
            "prob": 1,
            "varProb": "Int_",
            "failDesc": ""
          }
        ]
      }
    },
    {
      "Action": {
        "id": 2,
        "name": "TestCngVar",
        "desc": "",
        "actType": "atCngVarVal",
        "mainItem": false,
        "mutExcl": true,
        "newStates": [],
        "scriptCode": "",
        "variableName": "Int_",
        "codeVariables": [
          "Bool_"
        ]
      }
    },
    {
      "Action": {
        "id": 3,
        "name": "TestExtSim",
        "desc": "",
        "actType": "at3DSimMsg",
        "mainItem": false,
        "mutExcl": true,
        "newStates": [],
        "sim3DMessage": "atCompModify",
        "extSim": "ExtSim1",
        "sim3DVariable": "Str_"
      }
    },
    {
      "Action": {
        "id": 4,
        "name": "TestRunApp1",
        "desc": "",
        "actType": "atRunExtApp",
        "mainItem": false,
        "mutExcl": true,
        "newStates": [],
        "makeInputFileCode": "",
        "exePath": "",
        "processOutputFileCode": "",
        "codeVariables": [
          "Bool_"
        ],
        "formData": {},
        "template": {}
      }
    },
    {
      "Action": {
        "id": 5,
        "name": "TestOpenErrorPro",
        "desc": "",
        "actType": "atRunExtApp",
        "mainItem": false,
        "mutExcl": true,
        "newStates": [],
        "makeInputFileCode": "System.IO.File.WriteAllText(\"C:\\\\model.xml\", \"<?xml version=\\\"1.0\\\" encoding=\\\"utf-8\\\"?><epl>    <model initial_element=\\\"Generator\\\">        <element name=\\\"Battery\\\">            <epc>(gPower=HAS_POWER)&amp;(bLoad&lt;9)-&gt;1:(bPower'=HAS_POWER)&amp;(bLoad'=bLoad+1);</epc>            <epc>(gPower=HAS_POWER)&amp;(bLoad=9)-&gt;1:(bPower'=HAS_POWER)&amp;(bLoad'=bLoad);</epc>            <epc>(gPower=NO_POWER)&amp;(bLoad&gt;0)-&gt;1:(bPower'=HAS_POWER)&amp;(bLoad'=bLoad-1);</epc>            <epc>(gPower=NO_POWER)&amp;(bLoad=0)-&gt;1:(bPower'=NO_POWER)&amp;(bLoad'=bLoad);</epc>        </element>        <element name=\\\"Device\\\"/>        <element name=\\\"Generator\\\">            <epc>(gState1=OK)-&gt;\"+Int_+\":(gPower'=HAS_POWER)&amp;(gState1'=OK)+1-\"+Int_+\":(gPower'=NO_POWER)&amp;(gState1'=FAIL);</epc>            <epc>(gState1=FAIL)-&gt;1:(gPower'=NO_POWER)&amp;(gState1'=FAIL);</epc>        </element>        <data name=\\\"gState1\\\" values=\\\"OK, FAIL\\\"/>        <data name=\\\"gPower\\\" values=\\\"HAS_POWER, NO_POWER\\\"/>        <data name=\\\"bPower\\\" values=\\\"HAS_POWER, NO_POWER\\\"/>        <data initial_value=\\\"5\\\" name=\\\"bLoad\\\" values=\\\"0, 1, 2, 3, 4, 5, 6, 7, 8, 9\\\"/>        <control_flow from=\\\"Battery\\\" to=\\\"Device\\\"/>        <control_flow from=\\\"Device\\\" to=\\\"Generator\\\"/>        <control_flow from=\\\"Generator\\\" to=\\\"Battery\\\"/>        <data_flow from=\\\"Battery\\\" to=\\\"bPower\\\"/>        <data_flow from=\\\"Battery\\\" to=\\\"bLoad\\\"/>        <data_flow from=\\\"gPower\\\" to=\\\"Battery\\\"/>        <data_flow from=\\\"bLoad\\\" to=\\\"Battery\\\"/>        <data_flow from=\\\"bPower\\\" to=\\\"Device\\\"/>        <data_flow from=\\\"Generator\\\" to=\\\"gPower\\\"/>        <data_flow from=\\\"Generator\\\" to=\\\"gState1\\\"/>        <data_flow from=\\\"gState1\\\" to=\\\"Generator\\\"/>        <failure name=\\\"Battery_Low\\\">bLoad&lt;3</failure>        <failure name=\\\"Generator_Down\\\">gState1=FAIL</failure>        <failure name=\\\"Failure\\\">bPower=NO_POWER</failure>    </model></epl>\");return \"--model \\\"C:\\\\model.xml\\\" --method compute_execution_time --target \\\"Battery_Low\\\" --step-range \\\"0:10:100\\\" --prism \\\"C:\\\\prism-4.7\\\\bin\\\" --results \\\"C:\\\\results.json\\\"\";",
        "exePath": "C:\\Open Error Pro.exe",
        "processOutputFileCode": "",
        "codeVariables": [
          "Int_",
          "Str_2"
        ],
        "formData": {
          "model": "<?xml version=\\\"1.0\\\" encoding=\\\"utf-8\\\"?><epl>    <model initial_element=\\\"Generator\\\">        <element name=\\\"Battery\\\">            <epc>(gPower=HAS_POWER)&amp;(bLoad&lt;9)-&gt;1:(bPower'=HAS_POWER)&amp;(bLoad'=bLoad+1);</epc>            <epc>(gPower=HAS_POWER)&amp;(bLoad=9)-&gt;1:(bPower'=HAS_POWER)&amp;(bLoad'=bLoad);</epc>            <epc>(gPower=NO_POWER)&amp;(bLoad&gt;0)-&gt;1:(bPower'=HAS_POWER)&amp;(bLoad'=bLoad-1);</epc>            <epc>(gPower=NO_POWER)&amp;(bLoad=0)-&gt;1:(bPower'=NO_POWER)&amp;(bLoad'=bLoad);</epc>        </element>        <element name=\\\"Device\\\"/>        <element name=\\\"Generator\\\">            <epc>(gState1=OK)-&gt;\"+Int_+\":(gPower'=HAS_POWER)&amp;(gState1'=OK)+1-\"+Int_+\":(gPower'=NO_POWER)&amp;(gState1'=FAIL);</epc>            <epc>(gState1=FAIL)-&gt;1:(gPower'=NO_POWER)&amp;(gState1'=FAIL);</epc>        </element>        <data name=\\\"gState1\\\" values=\\\"OK, FAIL\\\"/>        <data name=\\\"gPower\\\" values=\\\"HAS_POWER, NO_POWER\\\"/>        <data name=\\\"bPower\\\" values=\\\"HAS_POWER, NO_POWER\\\"/>        <data initial_value=\\\"5\\\" name=\\\"bLoad\\\" values=\\\"0, 1, 2, 3, 4, 5, 6, 7, 8, 9\\\"/>        <control_flow from=\\\"Battery\\\" to=\\\"Device\\\"/>        <control_flow from=\\\"Device\\\" to=\\\"Generator\\\"/>        <control_flow from=\\\"Generator\\\" to=\\\"Battery\\\"/>        <data_flow from=\\\"Battery\\\" to=\\\"bPower\\\"/>        <data_flow from=\\\"Battery\\\" to=\\\"bLoad\\\"/>        <data_flow from=\\\"gPower\\\" to=\\\"Battery\\\"/>        <data_flow from=\\\"bLoad\\\" to=\\\"Battery\\\"/>        <data_flow from=\\\"bPower\\\" to=\\\"Device\\\"/>        <data_flow from=\\\"Generator\\\" to=\\\"gPower\\\"/>        <data_flow from=\\\"Generator\\\" to=\\\"gState1\\\"/>        <data_flow from=\\\"gState1\\\" to=\\\"Generator\\\"/>        <failure name=\\\"Battery_Low\\\">bLoad&lt;3</failure>        <failure name=\\\"Generator_Down\\\">gState1=FAIL</failure>        <failure name=\\\"Failure\\\">bPower=NO_POWER</failure>    </model></epl>",
          "modelName": "battery.xml",
          "prismPath": "C:\\prism-4.7\\bin",
          "varLinks": [
            {
              "prismMethod": "compute_execution_time",
              "target": "Battery_Low",
              "variable": {
                "id": 4,
                "name": "Str_2"
              }
            }
          ],
          "modified": []
        },
        "returnProcess": "rtNone",
        "template": {
          "name": "Open Error Pro",
          "path": "./ExecuteCustomForms/openerror.html"
        },
        "updateVariables": [
          {
            "id": 4,
            "name": "Str_2",
            "desc": "",
            "varScope": "gtDocLink",
            "value": "",
            "docLink": "$.output[0].result",
            "docType": "dtJSON",
            "docPath": "C:\\results.json",
            "pathMustExist": false,
            "type": "double"
          }
        ]
      }
    }
  ],
  "EventList": [],
  "LogicNodeList": [],
  "VariableList": [
    {
      "Variable": {
        "id": 1,
        "name": "Int_",
        "desc": "",
        "varScope": "gtGlobal",
        "value": 0,
        "resetOnRuns": true,
        "type": "int"
      }
    },
    {
      "Variable": {
        "id": 2,
        "name": "Bool_",
        "desc": "",
        "varScope": "gtGlobal",
        "value": true,
        "resetOnRuns": true,
        "type": "bool"
      }
    },
    {
      "Variable": {
        "id": 3,
        "name": "Str_",
        "desc": "",
        "varScope": "gt3DSim",
        "value": "",
        "resetOnRuns": true,
        "type": "string",
        "sim3DId": "Str_"
      }
    },
    {
      "Variable": {
        "id": 4,
        "name": "Str_2",
        "desc": "",
        "varScope": "gtDocLink",
        "value": "",
        "docLink": "$.output[0].result",
        "docType": "dtJSON",
        "docPath": "C:\\results.json",
        "pathMustExist": false,
        "type": "double"
      }
    }
  ],
  "templates": []
}