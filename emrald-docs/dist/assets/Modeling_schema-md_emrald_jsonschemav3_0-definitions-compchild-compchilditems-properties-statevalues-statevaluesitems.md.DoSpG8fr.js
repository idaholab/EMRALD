import{_ as t,c as e,o as a,a2 as s}from"./chunks/framework.BLHWSx9w.js";const f=JSON.parse('{"title":"StateValuesItems Schema","description":"","frontmatter":{},"headers":[],"relativePath":"Modeling/schema-md/emrald_jsonschemav3_0-definitions-compchild-compchilditems-properties-statevalues-statevaluesitems.md","filePath":"Modeling/schema-md/emrald_jsonschemav3_0-definitions-compchild-compchilditems-properties-statevalues-statevaluesitems.md"}'),l={name:"Modeling/schema-md/emrald_jsonschemav3_0-definitions-compchild-compchilditems-properties-statevalues-statevaluesitems.md"},i=s('<h1 id="statevaluesitems-schema" tabindex="-1">StateValuesItems Schema <a class="header-anchor" href="#statevaluesitems-schema" aria-label="Permalink to &quot;StateValuesItems Schema&quot;">​</a></h1><div class="language-txt vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">txt</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>EMRALD_Model#/definitions/CompChild/items/properties/stateValues/items</span></span></code></pre></div><table tabindex="0"><thead><tr><th style="text-align:left;">Abstract</th><th style="text-align:left;">Extensible</th><th style="text-align:left;">Status</th><th style="text-align:left;">Identifiable</th><th style="text-align:left;">Custom Properties</th><th style="text-align:left;">Additional Properties</th><th style="text-align:left;">Access Restrictions</th><th style="text-align:left;">Defined In</th></tr></thead><tbody><tr><td style="text-align:left;">Can be instantiated</td><td style="text-align:left;">No</td><td style="text-align:left;">Unknown status</td><td style="text-align:left;">No</td><td style="text-align:left;">Forbidden</td><td style="text-align:left;">Forbidden</td><td style="text-align:left;">none</td><td style="text-align:left;"><a href="../../out/EMRALD_JsonSchemaV3_0.json" title="open original schema">EMRALD_JsonSchemaV3_0.json*</a></td></tr></tbody></table><h2 id="items-type" tabindex="-1">items Type <a class="header-anchor" href="#items-type" aria-label="Permalink to &quot;items Type&quot;">​</a></h2><p><code>object</code> (<a href="./emrald_jsonschemav3_0-definitions-compchild-compchilditems-properties-statevalues-statevaluesitems.html">StateValuesItems</a>)</p><h1 id="items-properties" tabindex="-1">items Properties <a class="header-anchor" href="#items-properties" aria-label="Permalink to &quot;items Properties&quot;">​</a></h1><table tabindex="0"><thead><tr><th style="text-align:left;">Property</th><th style="text-align:left;">Type</th><th style="text-align:left;">Required</th><th style="text-align:left;">Nullable</th><th style="text-align:left;">Defined by</th></tr></thead><tbody><tr><td style="text-align:left;"><a href="#statename">stateName</a></td><td style="text-align:left;"><code>string</code></td><td style="text-align:left;">Required</td><td style="text-align:left;">cannot be null</td><td style="text-align:left;"><a href="./emrald_jsonschemav3_0-definitions-compchild-compchilditems-properties-statevalues-statevaluesitems-properties-statename.html" title="EMRALD_Model#/definitions/CompChild/items/properties/stateValues/items/properties/stateName">EMRALD_Model</a></td></tr><tr><td style="text-align:left;"><a href="#statevalue">stateValue</a></td><td style="text-align:left;"><code>string</code></td><td style="text-align:left;">Required</td><td style="text-align:left;">cannot be null</td><td style="text-align:left;"><a href="./emrald_jsonschemav3_0-definitions-compchild-compchilditems-properties-statevalues-statevaluesitems-properties-statevalue.html" title="EMRALD_Model#/definitions/CompChild/items/properties/stateValues/items/properties/stateValue">EMRALD_Model</a></td></tr></tbody></table><h2 id="statename" tabindex="-1">stateName <a class="header-anchor" href="#statename" aria-label="Permalink to &quot;stateName&quot;">​</a></h2><p>State name for the value.</p><p><code>stateName</code></p><ul><li><p>is required</p></li><li><p>Type: <code>string</code></p></li><li><p>cannot be null</p></li><li><p>defined in: <a href="./emrald_jsonschemav3_0-definitions-compchild-compchilditems-properties-statevalues-statevaluesitems-properties-statename.html" title="EMRALD_Model#/definitions/CompChild/items/properties/stateValues/items/properties/stateName">EMRALD_Model</a></p></li></ul><h3 id="statename-type" tabindex="-1">stateName Type <a class="header-anchor" href="#statename-type" aria-label="Permalink to &quot;stateName Type&quot;">​</a></h3><p><code>string</code></p><h2 id="statevalue" tabindex="-1">stateValue <a class="header-anchor" href="#statevalue" aria-label="Permalink to &quot;stateValue&quot;">​</a></h2><p>For single state diagrams. Boolean value for the diagram when evaluated in a logic tree. Ignore - removes that item from the logic calculation.</p><p><code>stateValue</code></p><ul><li><p>is required</p></li><li><p>Type: <code>string</code></p></li><li><p>cannot be null</p></li><li><p>defined in: <a href="./emrald_jsonschemav3_0-definitions-compchild-compchilditems-properties-statevalues-statevaluesitems-properties-statevalue.html" title="EMRALD_Model#/definitions/CompChild/items/properties/stateValues/items/properties/stateValue">EMRALD_Model</a></p></li></ul><h3 id="statevalue-type" tabindex="-1">stateValue Type <a class="header-anchor" href="#statevalue-type" aria-label="Permalink to &quot;stateValue Type&quot;">​</a></h3><p><code>string</code></p><h3 id="statevalue-constraints" tabindex="-1">stateValue Constraints <a class="header-anchor" href="#statevalue-constraints" aria-label="Permalink to &quot;stateValue Constraints&quot;">​</a></h3><p><strong>enum</strong>: the value of this property must be equal to one of the following values:</p><table tabindex="0"><thead><tr><th style="text-align:left;">Value</th><th style="text-align:left;">Explanation</th></tr></thead><tbody><tr><td style="text-align:left;"><code>&quot;True&quot;</code></td><td style="text-align:left;"></td></tr><tr><td style="text-align:left;"><code>&quot;False&quot;</code></td><td style="text-align:left;"></td></tr><tr><td style="text-align:left;"><code>&quot;Ignore&quot;</code></td><td style="text-align:left;"></td></tr></tbody></table>',22),o=[i];function d(n,r,h,p,m,c){return a(),e("div",null,o)}const g=t(l,[["render",d]]);export{f as __pageData,g as default};
