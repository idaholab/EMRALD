import{_ as e,c as t,o as i,a2 as l}from"./chunks/framework.BLHWSx9w.js";const y=JSON.parse('{"title":"LogicNode Schema","description":"","frontmatter":{},"headers":[],"relativePath":"Modeling/schema-md/emrald_jsonschemav3_0-definitions-logicnode.md","filePath":"Modeling/schema-md/emrald_jsonschemav3_0-definitions-logicnode.md"}'),o={name:"Modeling/schema-md/emrald_jsonschemav3_0-definitions-logicnode.md"},a=l('<h1 id="logicnode-schema" tabindex="-1">LogicNode Schema <a class="header-anchor" href="#logicnode-schema" aria-label="Permalink to &quot;LogicNode Schema&quot;">​</a></h1><div class="language-txt vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">txt</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>EMRALD_Model#/definitions/LogicNode</span></span></code></pre></div><table tabindex="0"><thead><tr><th style="text-align:left;">Abstract</th><th style="text-align:left;">Extensible</th><th style="text-align:left;">Status</th><th style="text-align:left;">Identifiable</th><th style="text-align:left;">Custom Properties</th><th style="text-align:left;">Additional Properties</th><th style="text-align:left;">Access Restrictions</th><th style="text-align:left;">Defined In</th></tr></thead><tbody><tr><td style="text-align:left;">Can be instantiated</td><td style="text-align:left;">No</td><td style="text-align:left;">Unknown status</td><td style="text-align:left;">No</td><td style="text-align:left;">Forbidden</td><td style="text-align:left;">Forbidden</td><td style="text-align:left;">none</td><td style="text-align:left;"><a href="../../out/EMRALD_JsonSchemaV3_0.json" title="open original schema">EMRALD_JsonSchemaV3_0.json*</a></td></tr></tbody></table><h2 id="logicnode-type" tabindex="-1">LogicNode Type <a class="header-anchor" href="#logicnode-type" aria-label="Permalink to &quot;LogicNode Type&quot;">​</a></h2><p><code>object</code> (<a href="./emrald_jsonschemav3_0-definitions-logicnode.html">LogicNode</a>)</p><h1 id="logicnode-properties" tabindex="-1">LogicNode Properties <a class="header-anchor" href="#logicnode-properties" aria-label="Permalink to &quot;LogicNode Properties&quot;">​</a></h1><table tabindex="0"><thead><tr><th style="text-align:left;">Property</th><th style="text-align:left;">Type</th><th style="text-align:left;">Required</th><th style="text-align:left;">Nullable</th><th style="text-align:left;">Defined by</th></tr></thead><tbody><tr><td style="text-align:left;"><a href="#id">id</a></td><td style="text-align:left;"><code>string</code></td><td style="text-align:left;">Optional</td><td style="text-align:left;">cannot be null</td><td style="text-align:left;"><a href="./emrald_jsonschemav3_0-definitions-logicnode-properties-id.html" title="EMRALD_Model#/definitions/LogicNode/properties/id">EMRALD_Model</a></td></tr><tr><td style="text-align:left;"><a href="#objtype">objType</a></td><td style="text-align:left;"><code>string</code></td><td style="text-align:left;">Required</td><td style="text-align:left;">cannot be null</td><td style="text-align:left;"><a href="./emrald_jsonschemav3_0-definitions-logicnode-properties-objtype.html" title="EMRALD_Model#/definitions/LogicNode/properties/objType">EMRALD_Model</a></td></tr><tr><td style="text-align:left;"><a href="#name">name</a></td><td style="text-align:left;"><code>string</code></td><td style="text-align:left;">Required</td><td style="text-align:left;">cannot be null</td><td style="text-align:left;"><a href="./emrald_jsonschemav3_0-definitions-logicnode-properties-name.html" title="EMRALD_Model#/definitions/LogicNode/properties/name">EMRALD_Model</a></td></tr><tr><td style="text-align:left;"><a href="#desc">desc</a></td><td style="text-align:left;"><code>string</code></td><td style="text-align:left;">Required</td><td style="text-align:left;">cannot be null</td><td style="text-align:left;"><a href="./emrald_jsonschemav3_0-definitions-logicnode-properties-desc.html" title="EMRALD_Model#/definitions/LogicNode/properties/desc">EMRALD_Model</a></td></tr><tr><td style="text-align:left;"><a href="#gatetype">gateType</a></td><td style="text-align:left;"><code>string</code></td><td style="text-align:left;">Required</td><td style="text-align:left;">cannot be null</td><td style="text-align:left;"><a href="./emrald_jsonschemav3_0-definitions-logicnode-properties-gatetype.html" title="EMRALD_Model#/definitions/LogicNode/properties/gateType">EMRALD_Model</a></td></tr><tr><td style="text-align:left;"><a href="#compchildren">compChildren</a></td><td style="text-align:left;"><code>array</code></td><td style="text-align:left;">Required</td><td style="text-align:left;">cannot be null</td><td style="text-align:left;"><a href="./emrald_jsonschemav3_0-definitions-compchild.html" title="EMRALD_Model#/definitions/LogicNode/properties/compChildren">EMRALD_Model</a></td></tr><tr><td style="text-align:left;"><a href="#gatechildren">gateChildren</a></td><td style="text-align:left;"><code>array</code></td><td style="text-align:left;">Required</td><td style="text-align:left;">cannot be null</td><td style="text-align:left;"><a href="./emrald_jsonschemav3_0-definitions-logicnode-properties-gatechildren.html" title="EMRALD_Model#/definitions/LogicNode/properties/gateChildren">EMRALD_Model</a></td></tr><tr><td style="text-align:left;"><a href="#isroot">isRoot</a></td><td style="text-align:left;"><code>boolean</code></td><td style="text-align:left;">Required</td><td style="text-align:left;">cannot be null</td><td style="text-align:left;"><a href="./emrald_jsonschemav3_0-definitions-logicnode-properties-isroot.html" title="EMRALD_Model#/definitions/LogicNode/properties/isRoot">EMRALD_Model</a></td></tr><tr><td style="text-align:left;"><a href="#changelog">changeLog</a></td><td style="text-align:left;"><code>array</code></td><td style="text-align:left;">Optional</td><td style="text-align:left;">cannot be null</td><td style="text-align:left;"><a href="./emrald_jsonschemav3_0-definitions-changelog.html" title="EMRALD_Model#/definitions/LogicNode/properties/changeLog">EMRALD_Model</a></td></tr><tr><td style="text-align:left;"><a href="#required">required</a></td><td style="text-align:left;"><code>boolean</code></td><td style="text-align:left;">Optional</td><td style="text-align:left;">cannot be null</td><td style="text-align:left;"><a href="./emrald_jsonschemav3_0-definitions-logicnode-properties-required.html" title="EMRALD_Model#/definitions/LogicNode/properties/required">EMRALD_Model</a></td></tr></tbody></table><h2 id="id" tabindex="-1">id <a class="header-anchor" href="#id" aria-label="Permalink to &quot;id&quot;">​</a></h2><p>Optional, internal use only.</p><p><code>id</code></p><ul><li><p>is optional</p></li><li><p>Type: <code>string</code></p></li><li><p>cannot be null</p></li><li><p>defined in: <a href="./emrald_jsonschemav3_0-definitions-logicnode-properties-id.html" title="EMRALD_Model#/definitions/LogicNode/properties/id">EMRALD_Model</a></p></li></ul><h3 id="id-type" tabindex="-1">id Type <a class="header-anchor" href="#id-type" aria-label="Permalink to &quot;id Type&quot;">​</a></h3><p><code>string</code></p><h2 id="objtype" tabindex="-1">objType <a class="header-anchor" href="#objtype" aria-label="Permalink to &quot;objType&quot;">​</a></h2><p>For event type of etDistribution this is the name of the distribution parameter.</p><p><code>objType</code></p><ul><li><p>is required</p></li><li><p>Type: <code>string</code></p></li><li><p>cannot be null</p></li><li><p>defined in: <a href="./emrald_jsonschemav3_0-definitions-logicnode-properties-objtype.html" title="EMRALD_Model#/definitions/LogicNode/properties/objType">EMRALD_Model</a></p></li></ul><h3 id="objtype-type" tabindex="-1">objType Type <a class="header-anchor" href="#objtype-type" aria-label="Permalink to &quot;objType Type&quot;">​</a></h3><p><code>string</code></p><h3 id="objtype-constraints" tabindex="-1">objType Constraints <a class="header-anchor" href="#objtype-constraints" aria-label="Permalink to &quot;objType Constraints&quot;">​</a></h3><p><strong>enum</strong>: the value of this property must be equal to one of the following values:</p><table tabindex="0"><thead><tr><th style="text-align:left;">Value</th><th style="text-align:left;">Explanation</th></tr></thead><tbody><tr><td style="text-align:left;"><code>&quot;Diagram&quot;</code></td><td style="text-align:left;"></td></tr><tr><td style="text-align:left;"><code>&quot;State&quot;</code></td><td style="text-align:left;"></td></tr><tr><td style="text-align:left;"><code>&quot;Action&quot;</code></td><td style="text-align:left;"></td></tr><tr><td style="text-align:left;"><code>&quot;Event&quot;</code></td><td style="text-align:left;"></td></tr><tr><td style="text-align:left;"><code>&quot;ExtSim&quot;</code></td><td style="text-align:left;"></td></tr><tr><td style="text-align:left;"><code>&quot;LogicNode&quot;</code></td><td style="text-align:left;"></td></tr><tr><td style="text-align:left;"><code>&quot;Variable&quot;</code></td><td style="text-align:left;"></td></tr><tr><td style="text-align:left;"><code>&quot;EMRALD_Model&quot;</code></td><td style="text-align:left;"></td></tr></tbody></table><h2 id="name" tabindex="-1">name <a class="header-anchor" href="#name" aria-label="Permalink to &quot;name&quot;">​</a></h2><p>referenace name in the logic node</p><p><code>name</code></p><ul><li><p>is required</p></li><li><p>Type: <code>string</code></p></li><li><p>cannot be null</p></li><li><p>defined in: <a href="./emrald_jsonschemav3_0-definitions-logicnode-properties-name.html" title="EMRALD_Model#/definitions/LogicNode/properties/name">EMRALD_Model</a></p></li></ul><h3 id="name-type" tabindex="-1">name Type <a class="header-anchor" href="#name-type" aria-label="Permalink to &quot;name Type&quot;">​</a></h3><p><code>string</code></p><h2 id="desc" tabindex="-1">desc <a class="header-anchor" href="#desc" aria-label="Permalink to &quot;desc&quot;">​</a></h2><p>User entered description of the logic node</p><p><code>desc</code></p><ul><li><p>is required</p></li><li><p>Type: <code>string</code></p></li><li><p>cannot be null</p></li><li><p>defined in: <a href="./emrald_jsonschemav3_0-definitions-logicnode-properties-desc.html" title="EMRALD_Model#/definitions/LogicNode/properties/desc">EMRALD_Model</a></p></li></ul><h3 id="desc-type" tabindex="-1">desc Type <a class="header-anchor" href="#desc-type" aria-label="Permalink to &quot;desc Type&quot;">​</a></h3><p><code>string</code></p><h2 id="gatetype" tabindex="-1">gateType <a class="header-anchor" href="#gatetype" aria-label="Permalink to &quot;gateType&quot;">​</a></h2><p>Gate type for the logic node</p><p><code>gateType</code></p><ul><li><p>is required</p></li><li><p>Type: <code>string</code></p></li><li><p>cannot be null</p></li><li><p>defined in: <a href="./emrald_jsonschemav3_0-definitions-logicnode-properties-gatetype.html" title="EMRALD_Model#/definitions/LogicNode/properties/gateType">EMRALD_Model</a></p></li></ul><h3 id="gatetype-type" tabindex="-1">gateType Type <a class="header-anchor" href="#gatetype-type" aria-label="Permalink to &quot;gateType Type&quot;">​</a></h3><p><code>string</code></p><h3 id="gatetype-constraints" tabindex="-1">gateType Constraints <a class="header-anchor" href="#gatetype-constraints" aria-label="Permalink to &quot;gateType Constraints&quot;">​</a></h3><p><strong>enum</strong>: the value of this property must be equal to one of the following values:</p><table tabindex="0"><thead><tr><th style="text-align:left;">Value</th><th style="text-align:left;">Explanation</th></tr></thead><tbody><tr><td style="text-align:left;"><code>&quot;gtAnd&quot;</code></td><td style="text-align:left;"></td></tr><tr><td style="text-align:left;"><code>&quot;gtOr&quot;</code></td><td style="text-align:left;"></td></tr><tr><td style="text-align:left;"><code>&quot;gtNot&quot;</code></td><td style="text-align:left;"></td></tr></tbody></table><h2 id="compchildren" tabindex="-1">compChildren <a class="header-anchor" href="#compchildren" aria-label="Permalink to &quot;compChildren&quot;">​</a></h2><p>Array of component diagram names and state values to use in evaluating if not using the default value.</p><p><code>compChildren</code></p><ul><li><p>is required</p></li><li><p>Type: <code>object[]</code> (<a href="./emrald_jsonschemav3_0-definitions-compchild-compchilditems.html">CompChildItems</a>)</p></li><li><p>cannot be null</p></li><li><p>defined in: <a href="./emrald_jsonschemav3_0-definitions-compchild.html" title="EMRALD_Model#/definitions/LogicNode/properties/compChildren">EMRALD_Model</a></p></li></ul><h3 id="compchildren-type" tabindex="-1">compChildren Type <a class="header-anchor" href="#compchildren-type" aria-label="Permalink to &quot;compChildren Type&quot;">​</a></h3><p><code>object[]</code> (<a href="./emrald_jsonschemav3_0-definitions-compchild-compchilditems.html">CompChildItems</a>)</p><h2 id="gatechildren" tabindex="-1">gateChildren <a class="header-anchor" href="#gatechildren" aria-label="Permalink to &quot;gateChildren&quot;">​</a></h2><p>Array of logic node names that are children of this gate.</p><p><code>gateChildren</code></p><ul><li><p>is required</p></li><li><p>Type: <code>string[]</code></p></li><li><p>cannot be null</p></li><li><p>defined in: <a href="./emrald_jsonschemav3_0-definitions-logicnode-properties-gatechildren.html" title="EMRALD_Model#/definitions/LogicNode/properties/gateChildren">EMRALD_Model</a></p></li></ul><h3 id="gatechildren-type" tabindex="-1">gateChildren Type <a class="header-anchor" href="#gatechildren-type" aria-label="Permalink to &quot;gateChildren Type&quot;">​</a></h3><p><code>string[]</code></p><h2 id="isroot" tabindex="-1">isRoot <a class="header-anchor" href="#isroot" aria-label="Permalink to &quot;isRoot&quot;">​</a></h2><p>Flag indicating that this is to be displayed as a tree top in the UI and can be used in an evaluate logic tree event.</p><p><code>isRoot</code></p><ul><li><p>is required</p></li><li><p>Type: <code>boolean</code></p></li><li><p>cannot be null</p></li><li><p>defined in: <a href="./emrald_jsonschemav3_0-definitions-logicnode-properties-isroot.html" title="EMRALD_Model#/definitions/LogicNode/properties/isRoot">EMRALD_Model</a></p></li></ul><h3 id="isroot-type" tabindex="-1">isRoot Type <a class="header-anchor" href="#isroot-type" aria-label="Permalink to &quot;isRoot Type&quot;">​</a></h3><p><code>boolean</code></p><h2 id="changelog" tabindex="-1">changeLog <a class="header-anchor" href="#changelog" aria-label="Permalink to &quot;changeLog&quot;">​</a></h2><p>Type of the diagram.</p><p><code>changeLog</code></p><ul><li><p>is optional</p></li><li><p>Type: <code>object[]</code> (<a href="./emrald_jsonschemav3_0-definitions-changelog-changelogitems.html">ChangeLogItems</a>)</p></li><li><p>cannot be null</p></li><li><p>defined in: <a href="./emrald_jsonschemav3_0-definitions-changelog.html" title="EMRALD_Model#/definitions/LogicNode/properties/changeLog">EMRALD_Model</a></p></li></ul><h3 id="changelog-type" tabindex="-1">changeLog Type <a class="header-anchor" href="#changelog-type" aria-label="Permalink to &quot;changeLog Type&quot;">​</a></h3><p><code>object[]</code> (<a href="./emrald_jsonschemav3_0-definitions-changelog-changelogitems.html">ChangeLogItems</a>)</p><h2 id="required" tabindex="-1">required <a class="header-anchor" href="#required" aria-label="Permalink to &quot;required&quot;">​</a></h2><p>If this is a template then it indicates the item must exist in the current model before using the template.</p><p><code>required</code></p><ul><li><p>is optional</p></li><li><p>Type: <code>boolean</code></p></li><li><p>cannot be null</p></li><li><p>defined in: <a href="./emrald_jsonschemav3_0-definitions-logicnode-properties-required.html" title="EMRALD_Model#/definitions/LogicNode/properties/required">EMRALD_Model</a></p></li></ul><h3 id="required-type" tabindex="-1">required Type <a class="header-anchor" href="#required-type" aria-label="Permalink to &quot;required Type&quot;">​</a></h3><p><code>boolean</code></p>',73),d=[a];function n(r,s,c,p,h,g){return i(),t("div",null,d)}const m=e(o,[["render",n]]);export{y as __pageData,m as default};
