import{a as e,_ as a,b as i}from"./chunks/red-dot.BQwPa0Pi.js";import{_ as n,a as o}from"./chunks/AddExistingAction1.CUX2dsU7.js";import{_ as s,a as r}from"./chunks/AddExistingEvent1.CybE7PvW.js";import{_ as l,c as d,o as c,a2 as p}from"./chunks/framework.BLHWSx9w.js";const h="/assets/StateAnatomy.BX9ZIKGb.png",m="/assets/NewState1.CiyNUkgg.png",g="/assets/NewState2.BMIZVU66.png",u="/assets/NewState3.CHbIiewJ.png",f="/assets/NewState4.COyJ_QME.png",S="/assets/EditStateOpt1.CCaKq-W_.png",w="/assets/EditStateOpt1_2.BihFYl8U.png",b="/assets/EditStateOpt2.lAKb0fiM.png",_="/assets/EditStateOpt2_2.qlJVs0f8.png",A="/assets/exit-icon.DMAkAQMp.png",v="/assets/ExitPropertyInEventProperties.fOlilUud.png",y="/assets/StatusValueExample.C7WJ7aTC.png",q="/assets/StatusValueTrue.DCknUfuz.png",E="/assets/StatusValueFalse.CjIrEKo5.png",x="/assets/DeleteStateOpt1.C_GTqD5Z.png",t="/assets/DeleteStateWarn.R5bN8MpN.png",k="/assets/DeleteStateOpt1_3.CpY3PuXF.png",T="/assets/DeleteStateOpt2.DFO_oPA_.png",O="/assets/DeleteStateOpt2_2.1Rka5DUF.png",I="/assets/StartState.DZua5LiI.png",N="/assets/StandardState.B-j4Ntwi.png",C="/assets/KeyState.BIb-xFIi.png",D="/assets/TerminalState.CAv__NWC.png",P="/assets/ImmediateActionExample.mwN_ejjB.png",F="/assets/AddExistingImmediateAction.Dnq7FFU7.png",M="/assets/EventActionsSection.DzwFRN8K.png",V="/assets/AddNewEventAction.BSJPjk-C.png",X=JSON.parse('{"title":"States","description":"","frontmatter":{},"headers":[],"relativePath":"Modeling/states.md","filePath":"Modeling/states.md"}'),R={name:"Modeling/states.md"},K=p('<h1 id="states" tabindex="-1">States <a class="header-anchor" href="#states" aria-label="Permalink to &quot;States&quot;">​</a></h1><p>A state is a logical representation for the condition of a component, person, system, process, etc. Each state has a Name, Immediate Action, and Event Action section. There are four different kinds of states: Start, Standard, Key, and Terminal. The Header indicates what kind of state with an icon it is as well as the name of the state. The Immediate Action section lists actions taken when a new state is entered. The Event Action section lists events to look for when in this state and what action to take if the event is triggered.<br></p><img src="'+h+'" alt="State Anatomy" width="220"><h2 id="creating-a-new-state" tabindex="-1">Creating a New State <a class="header-anchor" href="#creating-a-new-state" aria-label="Permalink to &quot;Creating a New State&quot;">​</a></h2><p>In the diagram that you want your state to be added to, right-click anywhere in the diagram window (not on any objects) and click, &quot;New State.&quot; <br><img src="'+m+'" alt="New State Step 1"></p><p>Type in a state name, an optional description, and, if the diagram is a single state diagram, what the logic tree evaluation should be. Press &quot;SAVE&quot;. The state will open up in the diagram window in the Modeling Area.<br><img src="'+g+'" alt="New State Step 2"><br><img src="'+u+'" alt="New State Step 3"><br></p><p>This name cannot be the same as any existing state in the model. If it is, an error message will pop up to notify you to choose another name.<br><img src="'+f+'" alt="New State Step 4"><br></p><h2 id="editing-a-state" tabindex="-1">Editing a State <a class="header-anchor" href="#editing-a-state" aria-label="Permalink to &quot;Editing a State&quot;">​</a></h2><p><strong>Option 1:</strong><br> On the Left Navigation Frame, click on the tab (All or Local) where your state is located. If you are not sure which tab, click on the All tab. Right-click on the state and click &quot;Edit Properties&quot;.<br><img src="'+S+'" alt="Edit State Option 1"><br></p><p>The properties window will open up in the Modeling Area. Note that because you are accessing the state properties from the Left Navigation Frame, the boolean evaluation value will not appear even if the diagram that the state belongs to is a single state diagram. Remember that states only evaluate to a boolean expression if the diagram it belongs to is a single state diagram. To view the boolean expression of the state, use <a href="#option-2">option two</a> for editing states.<br><img src="'+w+'" alt="Edit State Option 2 Step 2" style="width:450px;"></p><h4 id="option-2" tabindex="-1">Option 2:<br> <a class="header-anchor" href="#option-2" aria-label="Permalink to &quot;Option 2:&lt;br&gt;&quot;">​</a></h4><p>In the diagram window, right-click in the middle of the state and click &quot;State Properties...&quot;.<br><img src="'+b+'" alt="Edit State Option 2"><br></p><p>The properties window will open up in the diagram window. <br><img src="'+_+'" alt="Edit State Option 2 Step 2"></p><h2 id="state-properties" tabindex="-1">State Properties <a class="header-anchor" href="#state-properties" aria-label="Permalink to &quot;State Properties&quot;">​</a></h2><p>State properties depend on the type of diagram. All diagram states have lists of events in the &quot;Event Actions&quot; list, and associated with each event is a &quot;Exit Parent State&quot; property. This property tells the simulation to exit the state after the events actions are executed. This adds a door with arrow icon (<img src="'+A+'" alt="Start" width="18"> ) to the right of the event and any arrows going from the action will turn black. If there are no transition actions.<br></p><p>Note that the exit property is set and edited in the event forms, not the state forms. <img src="'+v+'" alt="Event Properties Exit Option" style="width:450px;"><br></p><h3 id="single-state-diagrams-system-component" tabindex="-1">Single State Diagrams (System, Component) <a class="header-anchor" href="#single-state-diagrams-system-component" aria-label="Permalink to &quot;Single State Diagrams (System, Component)&quot;">​</a></h3><p>Single State diagrams such as system and components have an additional status value. This field is used for logic tree evaluations. They must have at least one state with a &quot;True&quot; value and one with a &quot;False&quot;. The &quot;Unknown&quot; value can be used if it is not to have any effect on the logic evaluation. See the following screenshots of the CCS System diagram as an example, there should never be a green dashed arrow in the diagram and the events for all transition actions should have a exit symbol.<br></p><p>The Single State diagram representing the CCS System. <img src="'+y+'" alt="Single State Diagram Example" style="width:500px;"><br></p><p>The CCS_Sys_Active State Properties window with &quot;True&quot; selected as the Status Value. <img src="'+q+'" alt="Status Value True" style="width:450px;"><br></p><p>The CCS_Sys_Failed State Properties window with &quot;False&quot; selected as the Status Value. <img src="'+E+'" alt="Status Value False" style="width:450px;"><br></p><h2 id="deleting-a-state" tabindex="-1">Deleting a State <a class="header-anchor" href="#deleting-a-state" aria-label="Permalink to &quot;Deleting a State&quot;">​</a></h2><p><strong>Option 1:</strong> <br> On the Left Navigation Frame, click on the tab (All, Global, or Local) where your state is located. If you are not sure which tab, click on the All tab. Right-click on the state and click &quot;Delete&quot;.<br><img src="'+x+'" alt="Delete State Option 1 Step 1" style="width:300px;"></p><p>A confirmation window will appear in the Modeling Area. Click &quot;DELETE&quot;.<br><img src="'+t+'" alt="Delete State Option 1 Step 2"><br></p><p>The state will be deleted and no longer listed in the Left Navigation Frame. <br><img src="'+k+'" alt="Delete State Option 1 Step 3" style="width:200px;"><br></p><p><strong>Option 2:</strong> <br> Open the Diagram containing the state and locate the state. Right-click on the state and click &quot; Delete State&quot;.<br><img src="'+T+'" alt="Edit State Option 2 Step 1"></p><p>A confirmation window will appear in the Modeling Area. Click &quot;DELETE&quot;.<br><img src="'+t+'" alt="Delete State Option 1 Step 2"><br></p><p>The state will no longer show in the diagram window and no longer will be listed in the Left Navigation Frame. <br><img src="'+O+'" alt="Edit State Option 2 Step 2"></p><h2 id="types-of-states" tabindex="-1">Types of States <a class="header-anchor" href="#types-of-states" aria-label="Permalink to &quot;Types of States&quot;">​</a></h2><p>The type of state will be indicated by an icon in the header of the state. Those icons are included in the title of the respective section as well as in the <a href="./icons.html#states">Icons: States</a> section.</p><h3>Start <img src="'+e+'" alt="Start" width="25"></h3><p>Start states are the states the model is in when the simulation begins. There must be at least one but can be more. All start states will be activated simultaneously.<br><img src="'+I+'" alt="Start State" style="width:220px;"></p><h3 id="standard" tabindex="-1">Standard <a class="header-anchor" href="#standard" aria-label="Permalink to &quot;Standard&quot;">​</a></h3><p>A normal state representing no special conditions. It will have no icon in the Header.<br><img src="'+N+'" alt="Standard State" style="width:220px;"></p><h3>Key <img src="'+a+'" alt="Key" width="25"></h3><p>A key state is what is of interest in the model, it will be tracked and reported if the model is in this state at the end of a simulation. In comparison to traditional PRA, all &quot;End Sates&quot; would have a corresponding &quot;Key State.&quot; <br><img src="'+C+'" alt="Key State" style="width:220px;"></p><h3>Terminal <img src="'+i+'" alt="Terminal" width="25"></h3><p>A user-defined simulation stopping point. A terminal state is not required but the simulation will run until the end time parameter is reached. However, it is recommend that terminal states be used to end all simulations when desired stop conditions are met for shortened computing time.<br><img src="'+D+'" alt="Terminal State" style="width:220px;"></p><h2 id="immediate-actions" tabindex="-1">Immediate Actions <a class="header-anchor" href="#immediate-actions" aria-label="Permalink to &quot;Immediate Actions&quot;">​</a></h2><p>Immediate actions are actions that are executed upon entering the state in a simulation. The actions are performed in order, top to bottom.<br><img src="'+P+'" alt="Immediate Action Examples"></p><p>An icon on the left of the action shows what type of action it is. Refer to the <a href="./icons.html#Actions">Actions</a> section of the Icons page to see what icons are associated with each action type.</p><div class="tip custom-block"><p class="custom-block-title">Note</p><p>A Transition Action in Immediate Actions area can not exit the state (black arrow), but adds the &quot;too&quot; state as current state (dotted green arrow). See the <a href="./diagrams.html#arrows">Elements of a Diagram: Arrows</a> section for more information.</p></div><h3 id="adding-an-immediate-action" tabindex="-1">Adding an Immediate Action <a class="header-anchor" href="#adding-an-immediate-action" aria-label="Permalink to &quot;Adding an Immediate Action&quot;">​</a></h3><p>To add an Immediate Action, you can either...<br></p><p><strong>Option 1:</strong> Right-click on the Immediate Action header in the state to create a new Immediate Action or <br><img src="'+n+'" alt="New Action 1"><br></p><p><strong>Option 2:</strong> Drag and drop an existing action into the Immediate Action section.<br><img src="'+F+'" alt="Add an Existing Immediate Action"><br></p><p>See <a href="./actions.html#creating-a-new-action">Creating a New Action</a> for detailed instructions for Option 1. See <a href="./actions.html#adding-an-existing-action">Adding an Existing Action</a> for detailed instructions for Option 2.</p><p>See <a href="/Modeling/actions.html">Actions</a> for more information.</p><h2 id="event-actions" tabindex="-1">Event Actions <a class="header-anchor" href="#event-actions" aria-label="Permalink to &quot;Event Actions&quot;">​</a></h2><p>Event Actions are event/action combinations taken when the event condition is met. <img src="'+M+'" alt="Event Actions Section" style="width:220px;"><br> An icon on the left of the action shows what type of action it is. See <a href="/Modeling/icons.html">Icons</a> for descriptions of each icon.</p><h3 id="adding-an-event" tabindex="-1">Adding an Event <a class="header-anchor" href="#adding-an-event" aria-label="Permalink to &quot;Adding an Event&quot;">​</a></h3><p>To add an Event, you can either...<br></p><p><strong>Option 1:</strong> Right-click on the Event Actions header in the state to create a new event or <br><img src="'+s+'" alt="New Event Step 1"><br></p><p><strong>Option 2:</strong> Drag and drop an existing event into the Immediate Action section.<br><img src="'+r+'" alt="Add an Existing Event 1"><br></p><p>See <a href="./events.html#creating-a-new-event">Creating a New Event</a> for detailed instructions for Option 1. See <a href="./events.html#adding-an-existing-event">Adding an Existing Event</a> for detailed instructions for Option 2.</p><p>See <a href="/Modeling/events.html">Events</a> for more information.</p><h3 id="adding-an-action-for-an-event" tabindex="-1">Adding an Action for an Event <a class="header-anchor" href="#adding-an-action-for-an-event" aria-label="Permalink to &quot;Adding an Action for an Event&quot;">​</a></h3><p>To add an action to an event, you can either...<br></p><p><strong>Option 1:</strong> Under the Event Actions header, right-click on the event you want to add the action to create a new Event Action or <br><img src="'+V+'" alt="New Event Action"><br></p><p><strong>Option 2:</strong> Drag and drop an existing action into the Event Action section.<br><img src="'+o+'" alt="Add an Existing Action 1"></p><p>See <a href="./actions.html#creating-a-new-action">Creating a New Action</a> for detailed instructions for Option 1. See <a href="./actions.html#adding-an-existing-action">Adding an Existing Action</a> for detailed instructions for Option 2.</p><p>See <a href="/Modeling/actions.html">Actions</a> for more information on Actions.</p>',62),L=[K];function B(U,j,J,H,W,Z){return c(),d("div",null,L)}const Y=l(R,[["render",B]]);export{X as __pageData,Y as default};
