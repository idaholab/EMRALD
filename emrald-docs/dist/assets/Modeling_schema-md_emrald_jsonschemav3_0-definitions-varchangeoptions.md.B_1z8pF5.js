import{_ as t,c as e,o as a,a2 as n}from"./chunks/framework.BLHWSx9w.js";const m=JSON.parse('{"title":"Untitled string in EMRALD_Model Schema","description":"","frontmatter":{},"headers":[],"relativePath":"Modeling/schema-md/emrald_jsonschemav3_0-definitions-varchangeoptions.md","filePath":"Modeling/schema-md/emrald_jsonschemav3_0-definitions-varchangeoptions.md"}'),l={name:"Modeling/schema-md/emrald_jsonschemav3_0-definitions-varchangeoptions.md"},s=n('<h1 id="untitled-string-in-emrald-model-schema" tabindex="-1">Untitled string in EMRALD_Model Schema <a class="header-anchor" href="#untitled-string-in-emrald-model-schema" aria-label="Permalink to &quot;Untitled string in EMRALD\\_Model Schema&quot;">​</a></h1><div class="language-txt vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">txt</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>EMRALD_Model#/definitions/VarChangeOptions</span></span></code></pre></div><p>Optional. When an event uses a variable and that variable changes, this tells the code how to update the event.</p><table tabindex="0"><thead><tr><th style="text-align:left;">Abstract</th><th style="text-align:left;">Extensible</th><th style="text-align:left;">Status</th><th style="text-align:left;">Identifiable</th><th style="text-align:left;">Custom Properties</th><th style="text-align:left;">Additional Properties</th><th style="text-align:left;">Access Restrictions</th><th style="text-align:left;">Defined In</th></tr></thead><tbody><tr><td style="text-align:left;">Can be instantiated</td><td style="text-align:left;">No</td><td style="text-align:left;">Unknown status</td><td style="text-align:left;">Unknown identifiability</td><td style="text-align:left;">Forbidden</td><td style="text-align:left;">Allowed</td><td style="text-align:left;">none</td><td style="text-align:left;"><a href="../../out/EMRALD_JsonSchemaV3_0.json" title="open original schema">EMRALD_JsonSchemaV3_0.json*</a></td></tr></tbody></table><h2 id="varchangeoptions-type" tabindex="-1">VarChangeOptions Type <a class="header-anchor" href="#varchangeoptions-type" aria-label="Permalink to &quot;VarChangeOptions Type&quot;">​</a></h2><p><code>string</code></p><h2 id="varchangeoptions-constraints" tabindex="-1">VarChangeOptions Constraints <a class="header-anchor" href="#varchangeoptions-constraints" aria-label="Permalink to &quot;VarChangeOptions Constraints&quot;">​</a></h2><p><strong>enum</strong>: the value of this property must be equal to one of the following values:</p><table tabindex="0"><thead><tr><th style="text-align:left;">Value</th><th style="text-align:left;">Explanation</th></tr></thead><tbody><tr><td style="text-align:left;"><code>&quot;ocIgnore&quot;</code></td><td style="text-align:left;"></td></tr><tr><td style="text-align:left;"><code>&quot;ocResample&quot;</code></td><td style="text-align:left;"></td></tr><tr><td style="text-align:left;"><code>&quot;ocAdjust&quot;</code></td><td style="text-align:left;"></td></tr></tbody></table>',9),i=[s];function o(d,r,h,c,g,p){return a(),e("div",null,i)}const _=t(l,[["render",o]]);export{m as __pageData,_ as default};
