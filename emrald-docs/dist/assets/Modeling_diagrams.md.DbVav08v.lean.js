import{_ as i}from"./chunks/DiagramElements.BMlu_kg4.js";import{_ as o}from"./chunks/SamplePlantDiagram.7e16qBzA.js";import{_ as n,c as r,a,a2 as t,j as e,o as s}from"./chunks/framework.BLHWSx9w.js";const l="/assets/NewDiagram1.CTSn_IX2.png",m="/assets/NewDiagram1_1.Ny-oPrh5.png",d="/assets/NewDiagram2.Co-QP4o6.png",h="/assets/NewDiagram2_1.Dhd2D_8j.png",g="/assets/NewDiagram_Import.C8seNCBd.png",p="/assets/NewDiagram_FromTemplate.Ck7JEDJE.png",c="/assets/NewDiagram3.uspL0rzj.png",u="/assets/EditDiagram1.R-2MxX3P.png",f="/assets/EditDiagram2.4Zbl9aZn.png",b="/assets/EditDiagramProps.CQI-qDun.png",w="/assets/DeleteDiagram1.D9-28Iq1.png",y="/assets/DeleteDiagram2.CIwca5jQ.png",v="/assets/DeleteDiagram3.CfxISDgM.png",_="/assets/SampleComponentDiagram.Ua6yulSz.png",D="/assets/SampleSystemDiagram.CvMI-mJ9.png",L=JSON.parse('{"title":"Diagrams","description":"","frontmatter":{},"headers":[],"relativePath":"Modeling/diagrams.md","filePath":"Modeling/diagrams.md"}'),S={name:"Modeling/diagrams.md"},q=t("",40),k=e("h3",{id:"single-state",tabindex:"-1"},[a("Single State "),e("a",{class:"header-anchor",href:"#single-state","aria-label":'Permalink to "Single State"'},"â€‹")],-1),x=e("p",null,[a('Single State diagrams are meant to be small diagrams for capturing all behaviors of individual components. All basic events for components in traditional PRA can be captured in a single state diagram. Single State diagrams means you can only be in one state at a time and that a boolean value is associated with the different states. At least one state must have a "0" value and at least one state must have a "1" value assigned. (See the Single State Diagrams subsection in '),e("a",{href:"./states.html#single-state-diagrams"},"State Properties"),a(" for more information.) "),e("br")],-1),T=e("img",{src:_,alt:"Sample Component Diagram"},null,-1),P=t("",5);function C(A,E,N,M,I,O){return s(),r("div",null,[q,a(' In this example, we are looking for the key states of "Small_Release" and "Large_Release". (See Key States under [States](/Modeling/states.md) for more information) The model starts in "Normal_Operations" and waits for a loss of offsite power "LOSP". When in "LOSP" three things can happen, ECS can fail, CCS and ECS can fail, or 24 hours can pass. These events cause the transition to the corresponding states and then the simulation will terminate. '),k,x,T,a(` This example is a pump that has three states, standby, active and failed. When the demand event for the pump's use is triggered, the pump either moves to active or failed depending on random sampling. This would be equivalent to a "Fails to Start" basic event in traditional PRA. When in the active state, a failure rate event would sample and determine when the pump will fail and move to the failed state. This is equivalent to a "Fails to Run" basic event in traditional PRA. In this example, a stop event resets or returns the pump to the standby state. `),P])}const V=n(S,[["render",C]]);export{L as __pageData,V as default};
